== Getting a lookup value: example for C_BPartner_ID ==

http://localhost:8080/rest/api/windows/getPropertyValues/1
with:
{
  "n": [
    {
      "n": "C_BPartner_ID"
    }
  ]
}


and you will get (NOTE: i've annotated it):
[
  {
	// PropertyName
    "n": {
      "n": "C_BPartner_ID"
    },
	
	// ValueType
    "vt": "de.metas.ui.web.window.shared.datatype.LookupValue",
	
	// Value
    "v": {
      "id": 2156425, // Partner ID
      "n": "G0001_Test Kunde 1", // Partner Name
      "ln": null // Long name (not used atm)
    }
  }
]



== Getting available BPartners to be displayed in dropdown when user typed "G" ==

=== Get how many items are ===
http://localhost:8080/rest/api/windows/executeCommand/1
with:
{
  "propertyPath": {
    "gridPropertyName": null,
    "rowId": null,
    "propertyName": {
      "n": "C_BPartner_ID#values"
    }
  },
  "commandId": "size",
  "params": {
    "filter": "G"
  }
}

and a possible result is (annotated by me):
{
  "vt": "java.lang.Integer", // Value Type
  "value": 2 // Value
}

=> we have 2 partners matching user's search string (e.g. "G").


=== Get the actual values ===
http://localhost:8080/rest/api/windows/executeCommand/1
with:
{
  "propertyPath": {
    "gridPropertyName": null,
    "rowId": null,
    "propertyName": {
      "n": "C_BPartner_ID#values"
    }
  },
  "commandId": "find",
  "params": {
    "filter": "G",
    "firstRow": 0,
    "pageLength": 10
  }
}


and a possible result is:
{
  "vt": "de.metas.ui.web.window.shared.datatype.LookupValueList",
  "value": {
    "l": [
      {
        "id": 2156425,
        "n": "G0001_Test Kunde 1",
        "ln": null
      },
      {
        "id": 2156423,
        "n": "G0002_Test Lieferant 1",
        "ln": null
      }
    ]
  }
}

